akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  http {
    server {
      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle connection timeouts.
      #idle-timeout = 60 s
    }
    client {
      # The time after which an idle connection will be automatically closed.
      # Set to `infinite` to completely disable idle timeouts.
      idle-timeout = infinite
    }
  }
  
  wamp {
    router {
      # Underlying transport can be one of the followings:
      #
      # - tcp
      #     Raw TCP
      # - tsl
      #     Transport Secure Layer
      # - ws    
      #     WebSocket 
      # - wss
      #     WebSocket over SSL/TLS
      #
      transport = "ws"
      
      # The TCP interface to bind to
      #
      iface = "127.0.0.1"
      
      # The TCP port number (between 0 and 65536) to bind to
      #
      port = 8080
      
      # The URL path incoming HTTP Upgrade request are
      # expected to be addressed to
      #
      path = "router"
      
      # The boolean switch to validate against strict URIs 
      # rather than loose URIs
      #
      validate-strict-uris = false

      # The boolean switch to NOT automatically create 
      # realms if they don't exist yet.
      #
      abort-unknown-realms = false

      # The boolean switch to disconnect those peers that send 
      # offending messages (e.g. not deserializable or causing
      # session failures)
      #
      # By default, offending messages are just dropped and 
      # the router resumes processing next incoming messages
      #
      disconnect-offending-peers = false
    }
    
    
    client {
      # The boolean switch to validate against strict URIs 
      # rather than loose URIs
      #
      validate-strict-uris = false

      # The boolean switch to disconnect those peers that send 
      # offending messages (e.g. not deserializable or causing
      # session failures)
      #
      # By default, offending messages are just dropped and 
      # the router resumes processing next incoming messages
      #
      disconnect-offending-peers = false
    }
  }
  
  http {
    server {
      server-header = "akka-wamp-0.10.0"
      idle-timeout = infinite
    }
  }
}
